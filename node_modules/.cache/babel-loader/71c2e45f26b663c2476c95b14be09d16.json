{"ast":null,"code":"var _jsxFileName = \"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Diary.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { DiaryStateContext } from '../App';\nimport { getStringDate } from '../util/date';\nimport MyHeader from '../components/MyHeader';\nimport MyButton from '../components/MyButton';\nimport { emotionList } from '../util/emotion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Diary = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n\n      if (targetDiary) {\n        setData(targetDiary);\n      } else {\n        alert('없는 일기입니다');\n        navigate('/', {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList]);\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  } else {\n    const curEmotionData = emotionList;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diaryPage\",\n      children: /*#__PURE__*/_jsxDEV(MyHeader, {\n        headText: `${getStringDate(new Date(data.date))} 기록`,\n        leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: '< 뒤로가기',\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this),\n        rightChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: '수정하기',\n          onClick: () => navigate(`/edit/${data.id}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Diary, \"GHqBxuwZ/RI84ZMN8TYIbTBgEas=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Diary;\nexport default Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["useState","useContext","useEffect","useNavigate","useParams","DiaryStateContext","getStringDate","MyHeader","MyButton","emotionList","Diary","id","diaryList","navigate","data","setData","length","targetDiary","find","it","parseInt","alert","replace","curEmotionData","Date","date"],"sources":["/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Diary.js"],"sourcesContent":["import { useState, useContext } from 'react';\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { DiaryStateContext } from '../App';\nimport { getStringDate } from '../util/date';\n\nimport MyHeader from '../components/MyHeader';\nimport MyButton from '../components/MyButton';\nimport { emotionList } from '../util/emotion';\n\nconst Diary = () => {\n  const { id } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n      if (targetDiary) {\n        setData(targetDiary);\n      } else {\n        alert('없는 일기입니다');\n        navigate('/', { replace: true });\n      }\n    }\n  }, [id, diaryList]);\n\n  if (!data) {\n    return <div className=\"DiaryPage\">로딩중입니다...</div>;\n  } else {\n    const curEmotionData = emotionList;\n    return (\n      <div className=\"diaryPage\">\n        <MyHeader\n          headText={`${getStringDate(new Date(data.date))} 기록`}\n          leftChild={\n            <MyButton text={'< 뒤로가기'} onClick={() => navigate(-1)} />\n          }\n          rightChild={\n            <MyButton\n              text={'수정하기'}\n              onClick={() => navigate(`/edit/${data.id}`)}\n            />\n          }\n        />\n      </div>\n    );\n  }\n};\n\nexport default Diary;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM;IAAEC;EAAF,IAASP,SAAS,EAAxB;EACA,MAAMQ,SAAS,GAAGX,UAAU,CAACI,iBAAD,CAA5B;EACA,MAAMQ,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;EAEAE,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,CAACI,MAAV,IAAoB,CAAxB,EAA2B;MACzB,MAAMC,WAAW,GAAGL,SAAS,CAACM,IAAV,CACjBC,EAAD,IAAQC,QAAQ,CAACD,EAAE,CAACR,EAAJ,CAAR,KAAoBS,QAAQ,CAACT,EAAD,CADlB,CAApB;;MAGA,IAAIM,WAAJ,EAAiB;QACfF,OAAO,CAACE,WAAD,CAAP;MACD,CAFD,MAEO;QACLI,KAAK,CAAC,UAAD,CAAL;QACAR,QAAQ,CAAC,GAAD,EAAM;UAAES,OAAO,EAAE;QAAX,CAAN,CAAR;MACD;IACF;EACF,CAZQ,EAYN,CAACX,EAAD,EAAKC,SAAL,CAZM,CAAT;;EAcA,IAAI,CAACE,IAAL,EAAW;IACT,oBAAO;MAAK,SAAS,EAAC,WAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFD,MAEO;IACL,MAAMS,cAAc,GAAGd,WAAvB;IACA,oBACE;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE,QAAC,QAAD;QACE,QAAQ,EAAG,GAAEH,aAAa,CAAC,IAAIkB,IAAJ,CAASV,IAAI,CAACW,IAAd,CAAD,CAAsB,KADlD;QAEE,SAAS,eACP,QAAC,QAAD;UAAU,IAAI,EAAE,QAAhB;UAA0B,OAAO,EAAE,MAAMZ,QAAQ,CAAC,CAAC,CAAF;QAAjD;UAAA;UAAA;UAAA;QAAA,QAHJ;QAKE,UAAU,eACR,QAAC,QAAD;UACE,IAAI,EAAE,MADR;UAEE,OAAO,EAAE,MAAMA,QAAQ,CAAE,SAAQC,IAAI,CAACH,EAAG,EAAlB;QAFzB;UAAA;UAAA;UAAA;QAAA;MANJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAgBD;AACF,CAzCD;;GAAMD,K;UACWN,S,EAEED,W;;;KAHbO,K;AA2CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}