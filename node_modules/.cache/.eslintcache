[{"/Users/stuckyiii/projects/inflearn/emotion-diary/src/index.js":"1","/Users/stuckyiii/projects/inflearn/emotion-diary/src/App.js":"2","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Home.js":"3","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Diary.js":"4","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Edit.js":"5","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/New.js":"6","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyButton.js":"7","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyHeader.js":"8"},{"size":254,"mtime":1652334979108,"results":"9","hashOfConfig":"10"},{"size":2361,"mtime":1652953901276,"results":"11","hashOfConfig":"10"},{"size":141,"mtime":1652335689873,"results":"12","hashOfConfig":"10"},{"size":242,"mtime":1652409387971,"results":"13","hashOfConfig":"10"},{"size":750,"mtime":1652410272025,"results":"14","hashOfConfig":"10"},{"size":157,"mtime":1652335722359,"results":"15","hashOfConfig":"10"},{"size":302,"mtime":1652626327431,"results":"16","hashOfConfig":"10"},{"size":294,"mtime":1652696280202,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vx4bcl",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stuckyiii/projects/inflearn/emotion-diary/src/index.js",[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/App.js",["45","46"],[],"import React, { useReducer, useRef } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport New from \"./pages/New\";\nimport Edit from \"./pages/Edit\";\nimport Diary from \"./pages/Diary\";\n\n// COMPONENTS\nimport MyButton from \"./components/MyButton\";\nimport MyHeader from \"./components/MyHeader\";\n\nconst reducer = (state, action) => {\n  let newState = [];\n  switch (action.type) {\n    case \"INIT\": {\n      return action.data;\n    }\n    case \"CREATE\": {\n      newState = [action.data, ...state];\n      break;\n    }\n    case \"REMOVE\": {\n      newState = state.filter((it) => it.id !== action.targetId);\n      break;\n    }\n    case \"EDIT\": {\n      newState = state.map((it) =>\n        it.id === action.data.id ? { ...action.data } : it\n      );\n      break;\n    }\n\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport const DiaryStateContext = React.createContext();\nexport const DiaryDispatchContext = React.createContext();\n\nfunction App() {\n  const [data, dispatch] = useReducer(reducer, []);\n\n  const dataId = useRef(0);\n  // CREATE\n  const onCreate = (date, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        id: dataId.current,\n        date: new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    });\n    dataId.current += 1;\n  };\n  // REMOVE\n  const onRemove = (targetId) => {\n    dispatch({ type: \"REMOVE\", targetId });\n  };\n  // EDIT\n  const onEdit = (targetId, date, content, emotion) => {\n    dispatch({\n      type: \"EDIT\",\n      data: {\n        id: targetId,\n        date: new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    });\n  };\n\n  return (\n    <DiaryStateContext.Provider value={data}>\n      <DiaryDispatchContext.Provider\n        value={{\n          onCreate,\n          onEdit,\n          onRemove,\n        }}\n      >\n        <BrowserRouter>\n          <div className=\"App\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/new\" element={<New />} />\n              <Route path=\"/edit\" element={<Edit />} />\n              <Route path=\"/diary/:id\" element={<Diary />} />\n            </Routes>\n          </div>\n        </BrowserRouter>\n      </DiaryDispatchContext.Provider>\n    </DiaryStateContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Home.js",[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Diary.js",["47"],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Edit.js",["48","49"],[],"import { useNavigate, useSearchParams } from \"react-router-dom\";\n\nconst Edit = () => {\n  const navigate = useNavigate();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const id = searchParams.get(\"id\");\n  const mode = searchParams.get(\"mode\");\n\n  return (\n    <div>\n      <h1>Edit</h1>\n      <p>이곳은 수정 페이지 입니다.</p>\n      <button onClick={() => setSearchParams({ who: \"winterlood\" })}>\n        QS바꾸기\n      </button>\n      <button\n        onClick={() => {\n          navigate(\"/home\");\n        }}\n      >\n        HOME으로 가기\n      </button>\n      <button\n        onClick={() => {\n          navigate(-1);\n        }}\n      >\n        뒤로가기\n      </button>\n    </div>\n  );\n};\n\nexport default Edit;\n",[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/New.js",[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyButton.js",["50"],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyHeader.js",[],[],{"ruleId":"51","severity":1,"message":"52","line":11,"column":8,"nodeType":"53","messageId":"54","endLine":11,"endColumn":16},{"ruleId":"51","severity":1,"message":"55","line":12,"column":8,"nodeType":"53","messageId":"54","endLine":12,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":4,"column":11,"nodeType":"53","messageId":"54","endLine":4,"endColumn":13},{"ruleId":"51","severity":1,"message":"56","line":8,"column":9,"nodeType":"53","messageId":"54","endLine":8,"endColumn":11},{"ruleId":"51","severity":1,"message":"57","line":9,"column":9,"nodeType":"53","messageId":"54","endLine":9,"endColumn":13},{"ruleId":"51","severity":1,"message":"58","line":2,"column":9,"nodeType":"53","messageId":"54","endLine":2,"endColumn":16},"no-unused-vars","'MyButton' is defined but never used.","Identifier","unusedVar","'MyHeader' is defined but never used.","'id' is assigned a value but never used.","'mode' is assigned a value but never used.","'btnType' is assigned a value but never used."]