[{"/Users/stuckyiii/projects/inflearn/emotion-diary/src/index.js":"1","/Users/stuckyiii/projects/inflearn/emotion-diary/src/App.js":"2","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Home.js":"3","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Diary.js":"4","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Edit.js":"5","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/New.js":"6","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyButton.js":"7","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyHeader.js":"8","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/DiaryList.js":"9","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/DiaryItem.js":"10","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/DiaryEditor.js":"11","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/EmotionItem.js":"12"},{"size":254,"mtime":1652334979108,"results":"13","hashOfConfig":"14"},{"size":2884,"mtime":1653114521358,"results":"15","hashOfConfig":"14"},{"size":1618,"mtime":1653143952921,"results":"16","hashOfConfig":"14"},{"size":242,"mtime":1652409387971,"results":"17","hashOfConfig":"14"},{"size":750,"mtime":1652410272025,"results":"18","hashOfConfig":"14"},{"size":157,"mtime":1653281547627,"results":"19","hashOfConfig":"14"},{"size":302,"mtime":1652626327431,"results":"20","hashOfConfig":"14"},{"size":294,"mtime":1653114200170,"results":"21","hashOfConfig":"14"},{"size":2441,"mtime":1653274084600,"results":"22","hashOfConfig":"14"},{"size":1084,"mtime":1653279737163,"results":"23","hashOfConfig":"14"},{"size":2697,"mtime":1653387073118,"results":"24","hashOfConfig":"14"},{"size":425,"mtime":1653386603788,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vx4bcl",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"49"},"/Users/stuckyiii/projects/inflearn/emotion-diary/src/index.js",[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/App.js",["71","72"],[],"import React, { useReducer, useRef } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport New from \"./pages/New\";\nimport Edit from \"./pages/Edit\";\nimport Diary from \"./pages/Diary\";\n\n// COMPONENTS\nimport MyButton from \"./components/MyButton\";\nimport MyHeader from \"./components/MyHeader\";\n\nconst reducer = (state, action) => {\n  let newState = [];\n  switch (action.type) {\n    case \"INIT\": {\n      return action.data;\n    }\n    case \"CREATE\": {\n      newState = [action.data, ...state];\n      break;\n    }\n    case \"REMOVE\": {\n      newState = state.filter((it) => it.id !== action.targetId);\n      break;\n    }\n    case \"EDIT\": {\n      newState = state.map((it) =>\n        it.id === action.data.id ? { ...action.data } : it\n      );\n      break;\n    }\n\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport const DiaryStateContext = React.createContext();\nexport const DiaryDispatchContext = React.createContext();\n\nconst dummyData = [\n  {\n    id: 1,\n    emotion: 1,\n    content: \"오늘의일기 1번\",\n    date: 1653114273312,\n  },\n  {\n    id: 2,\n    emotion: 2,\n    content: \"오늘의일기 2번\",\n    date: 1653114273313,\n  },\n  {\n    id: 3,\n    emotion: 3,\n    content: \"오늘의일기 1번\",\n    date: 1653114273314,\n  },\n  {\n    id: 4,\n    emotion: 4,\n    content: \"오늘의일기 4번\",\n    date: 1653114273315,\n  },\n  {\n    id: 5,\n    emotion: 5,\n    content: \"오늘의일기 5번\",\n    date: 1653114273316,\n  },\n];\n\nfunction App() {\n  const [data, dispatch] = useReducer(reducer, [dummyData]);\n\n  const dataId = useRef(0);\n  // CREATE\n  const onCreate = (date, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        id: dataId.current,\n        date: new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    });\n    dataId.current += 1;\n  };\n  // REMOVE\n  const onRemove = (targetId) => {\n    dispatch({ type: \"REMOVE\", targetId });\n  };\n  // EDIT\n  const onEdit = (targetId, date, content, emotion) => {\n    dispatch({\n      type: \"EDIT\",\n      data: {\n        id: targetId,\n        date: new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    });\n  };\n\n  return (\n    <DiaryStateContext.Provider value={data}>\n      <DiaryDispatchContext.Provider\n        value={{\n          onCreate,\n          onEdit,\n          onRemove,\n        }}\n      >\n        <BrowserRouter>\n          <div className=\"App\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/new\" element={<New />} />\n              <Route path=\"/edit\" element={<Edit />} />\n              <Route path=\"/diary/:id\" element={<Diary />} />\n            </Routes>\n          </div>\n        </BrowserRouter>\n      </DiaryDispatchContext.Provider>\n    </DiaryStateContext.Provider>\n  );\n}\n\nexport default App;\n",[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Home.js",["73","74"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { DiaryStateContext } from \"../App\";\n\nimport MyHeader from \"./../components/MyHeader\";\nimport MyButton from \"./../components/MyButton\";\nimport DiaryList from \"./../components/DiaryList\";\n\nconst Home = () => {\n  const diaryList = useContext(DiaryStateContext);\n\n  const [data, setData] = useState([]);\n  const [curDate, setCurDate] = useState(new Date());\n  console.log(curDate);\n  const headText = `${curDate.getFullYear()}년 ${curDate.getMonth() + 1}월`;\n\n  useEffect(() => {\n    if (diaryList >= 1) {\n      const firstDay = new Date(\n        curDate.getFullYear(),\n        curDate.getMonth(),\n        1\n      ).getTime();\n\n      const lastDay = new Date(\n        curDate.getFullYear(),\n        curDate.getMonth() + 1,\n        0\n      ).getTime();\n\n      setData(\n        diaryList.filter((it) => firstDay <= it.date && it.date <= lastDay)\n      );\n    }\n  }, [diaryList, curDate]);\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  const increaseMonth = () => {\n    setCurDate(\n      new Date(curDate.getFullYear(), curDate.getMonth() + 1, curDate.getDate())\n    );\n  };\n  const decreaseMonth = () => {\n    setCurDate(\n      new Date(curDate.getFullYear(), curDate.getMonth() - 1, curDate.getDate())\n    );\n  };\n\n  return (\n    <div>\n      <MyHeader\n        headText={headText}\n        leftChild={<MyButton text={\"<\"} onClick={() => {}} />}\n        rightChild={<MyButton text={\">\"} onClick={() => {}} />}\n      />\n      <DiaryList diaryList={data} />\n    </div>\n  );\n};\n\nDiaryList.defaultProps = {\n  diaryList: [],\n};\nexport default Home;\n",[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Diary.js",["75"],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Edit.js",["76","77"],[],"import { useNavigate, useSearchParams } from \"react-router-dom\";\n\nconst Edit = () => {\n  const navigate = useNavigate();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const id = searchParams.get(\"id\");\n  const mode = searchParams.get(\"mode\");\n\n  return (\n    <div>\n      <h1>Edit</h1>\n      <p>이곳은 수정 페이지 입니다.</p>\n      <button onClick={() => setSearchParams({ who: \"winterlood\" })}>\n        QS바꾸기\n      </button>\n      <button\n        onClick={() => {\n          navigate(\"/home\");\n        }}\n      >\n        HOME으로 가기\n      </button>\n      <button\n        onClick={() => {\n          navigate(-1);\n        }}\n      >\n        뒤로가기\n      </button>\n    </div>\n  );\n};\n\nexport default Edit;\n","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/New.js",[],[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyButton.js",["78"],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyHeader.js",[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/DiaryList.js",[],[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/DiaryItem.js",["79"],[],"import { useNavigate } from \"react-router-dom\";\nimport MyButton from \"./MyButton\";\n\nconst DiaryItem = ({ id, emotion, content, date }) => {\n  const navigate = useNavigate();\n\n  const env = process.env;\n  env.PUBLIC_URL = env.PUBLIC_URL || \"\";\n\n  const strDate = new Date(parseInt(date)).toLocaleDateString();\n\n  const goDetail = () => {\n    navigate(`/diary/${id}`);\n  };\n\n  const goEdit = () => {\n    navigate(`/edit/${id}`);\n  };\n\n  return (\n    <div className=\"DiaryItem\">\n      <div\n        onClick={goDetail}\n        className={[\n          \"emotion_img_wrapper\",\n          `emotion_img_wrapper_${emotion}`,\n        ].join(\" \")}\n      >\n        <img src={process.env.PUBLIC_URL + `assets/emotion${emotion}.png`} />\n      </div>\n      <div onClick={goDetail} className=\"info_wrapper\">\n        <div className=\"diary_date\">{strDate}</div>\n        <div className=\"diary_content_preview\">{content.slice(0, 25)}</div>\n      </div>\n      <div className=\"btn_wrapper\">\n        <MyButton onClick={goEdit} text={\"수정하기\"} />\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryItem;\n","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/DiaryEditor.js",[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/EmotionItem.js",["80"],[],"const EmotionItem = ({\n  emotion_id,\n  emotion_img,\n  emotion_descript,\n  onClick,\n  isSelected,\n}) => {\n  return (\n    <div\n      onClick={() => onClick(emotion_id)}\n      className={[\n        \"EmotionItem\",\n        isSelected ? `EmotionItem_on_${emotion_id}` : `EmotionItem_off`,\n      ].join(\" \")}\n    >\n      <img src={emotion_img} />\n      <span>{emotion_descript}</span>\n    </div>\n  );\n};\n\nexport default EmotionItem;\n",{"ruleId":"81","severity":1,"message":"82","line":11,"column":8,"nodeType":"83","messageId":"84","endLine":11,"endColumn":16},{"ruleId":"81","severity":1,"message":"85","line":12,"column":8,"nodeType":"83","messageId":"84","endLine":12,"endColumn":16},{"ruleId":"81","severity":1,"message":"86","line":40,"column":9,"nodeType":"83","messageId":"84","endLine":40,"endColumn":22},{"ruleId":"81","severity":1,"message":"87","line":45,"column":9,"nodeType":"83","messageId":"84","endLine":45,"endColumn":22},{"ruleId":"81","severity":1,"message":"88","line":4,"column":11,"nodeType":"83","messageId":"84","endLine":4,"endColumn":13},{"ruleId":"81","severity":1,"message":"88","line":8,"column":9,"nodeType":"83","messageId":"84","endLine":8,"endColumn":11},{"ruleId":"81","severity":1,"message":"89","line":9,"column":9,"nodeType":"83","messageId":"84","endLine":9,"endColumn":13},{"ruleId":"81","severity":1,"message":"90","line":2,"column":9,"nodeType":"83","messageId":"84","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":29,"column":9,"nodeType":"93","endLine":29,"endColumn":78},{"ruleId":"91","severity":1,"message":"92","line":16,"column":7,"nodeType":"93","endLine":16,"endColumn":32},"no-unused-vars","'MyButton' is defined but never used.","Identifier","unusedVar","'MyHeader' is defined but never used.","'increaseMonth' is assigned a value but never used.","'decreaseMonth' is assigned a value but never used.","'id' is assigned a value but never used.","'mode' is assigned a value but never used.","'btnType' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]