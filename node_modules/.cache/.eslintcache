[{"/Users/stuckyiii/projects/inflearn/emotion-diary/src/index.js":"1","/Users/stuckyiii/projects/inflearn/emotion-diary/src/App.js":"2","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Home.js":"3","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Diary.js":"4","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Edit.js":"5","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/New.js":"6","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyButton.js":"7","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyHeader.js":"8","/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/DiaryList.js":"9"},{"size":254,"mtime":1652334979108,"results":"10","hashOfConfig":"11"},{"size":2884,"mtime":1653114521358,"results":"12","hashOfConfig":"11"},{"size":1618,"mtime":1653116374237,"results":"13","hashOfConfig":"11"},{"size":242,"mtime":1652409387971,"results":"14","hashOfConfig":"11"},{"size":750,"mtime":1652410272025,"results":"15","hashOfConfig":"11"},{"size":157,"mtime":1652335722359,"results":"16","hashOfConfig":"11"},{"size":302,"mtime":1652626327431,"results":"17","hashOfConfig":"11"},{"size":294,"mtime":1653114200170,"results":"18","hashOfConfig":"11"},{"size":1187,"mtime":1653141940636,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vx4bcl",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/Users/stuckyiii/projects/inflearn/emotion-diary/src/index.js",[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/App.js",["53","54"],[],"import React, { useReducer, useRef } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport New from \"./pages/New\";\nimport Edit from \"./pages/Edit\";\nimport Diary from \"./pages/Diary\";\n\n// COMPONENTS\nimport MyButton from \"./components/MyButton\";\nimport MyHeader from \"./components/MyHeader\";\n\nconst reducer = (state, action) => {\n  let newState = [];\n  switch (action.type) {\n    case \"INIT\": {\n      return action.data;\n    }\n    case \"CREATE\": {\n      newState = [action.data, ...state];\n      break;\n    }\n    case \"REMOVE\": {\n      newState = state.filter((it) => it.id !== action.targetId);\n      break;\n    }\n    case \"EDIT\": {\n      newState = state.map((it) =>\n        it.id === action.data.id ? { ...action.data } : it\n      );\n      break;\n    }\n\n    default:\n      return state;\n  }\n  return newState;\n};\n\nexport const DiaryStateContext = React.createContext();\nexport const DiaryDispatchContext = React.createContext();\n\nconst dummyData = [\n  {\n    id: 1,\n    emotion: 1,\n    content: \"오늘의일기 1번\",\n    date: 1653114273312,\n  },\n  {\n    id: 2,\n    emotion: 2,\n    content: \"오늘의일기 2번\",\n    date: 1653114273313,\n  },\n  {\n    id: 3,\n    emotion: 3,\n    content: \"오늘의일기 1번\",\n    date: 1653114273314,\n  },\n  {\n    id: 4,\n    emotion: 4,\n    content: \"오늘의일기 4번\",\n    date: 1653114273315,\n  },\n  {\n    id: 5,\n    emotion: 5,\n    content: \"오늘의일기 5번\",\n    date: 1653114273316,\n  },\n];\n\nfunction App() {\n  const [data, dispatch] = useReducer(reducer, [dummyData]);\n\n  const dataId = useRef(0);\n  // CREATE\n  const onCreate = (date, content, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        id: dataId.current,\n        date: new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    });\n    dataId.current += 1;\n  };\n  // REMOVE\n  const onRemove = (targetId) => {\n    dispatch({ type: \"REMOVE\", targetId });\n  };\n  // EDIT\n  const onEdit = (targetId, date, content, emotion) => {\n    dispatch({\n      type: \"EDIT\",\n      data: {\n        id: targetId,\n        date: new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    });\n  };\n\n  return (\n    <DiaryStateContext.Provider value={data}>\n      <DiaryDispatchContext.Provider\n        value={{\n          onCreate,\n          onEdit,\n          onRemove,\n        }}\n      >\n        <BrowserRouter>\n          <div className=\"App\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/new\" element={<New />} />\n              <Route path=\"/edit\" element={<Edit />} />\n              <Route path=\"/diary/:id\" element={<Diary />} />\n            </Routes>\n          </div>\n        </BrowserRouter>\n      </DiaryDispatchContext.Provider>\n    </DiaryStateContext.Provider>\n  );\n}\n\nexport default App;\n",[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Home.js",["55","56"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { DiaryStateContext } from \"../App\";\n\nimport MyHeader from \"./../components/MyHeader\";\nimport MyButton from \"./../components/MyButton\";\nimport DiaryList from \"./../components/DiaryList\";\n\nconst Home = () => {\n  const diaryList = useContext(DiaryStateContext);\n\n  const [data, setData] = useState([]);\n  const [curDate, setCurDate] = useState(new Date());\n  console.log(curDate);\n  const headText = `${curDate.getFullYear()}년 ${curDate.getMonth() + 1}월`;\n\n  useEffect(() => {\n    if (diaryList >= 1) {\n      const firstDay = new Date(\n        curDate.getFullYear(),\n        curDate.getMonth(),\n        1\n      ).getTime();\n\n      const lastDay = new Date(\n        curDate.getFullYear(),\n        curDate.getMonth() + 1,\n        0\n      ).getTime();\n\n      setData(\n        diaryList.filter((it) => firstDay <= it.date && it.date <= lastDay)\n      );\n    }\n  }, [diaryList, curDate]);\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n\n  const increaseMonth = () => {\n    setCurDate(\n      new Date(curDate.getFullYear(), curDate.getMonth() + 1, curDate.getDate())\n    );\n  };\n  const decreaseMonth = () => {\n    setCurDate(\n      new Date(curDate.getFullYear(), curDate.getMonth() - 1, curDate.getDate())\n    );\n  };\n\n  return (\n    <div>\n      <MyHeader\n        headText={headText}\n        leftChild={<MyButton text={\"<\"} onClick={() => {}} />}\n        rightChild={<MyButton text={\">\"} onClick={() => {}} />}\n      />\n      <DiaryList diaryList={data} />\n    </div>\n  );\n};\n\nDiaryList.defaultProps = {\n  diaryList: [],\n};\nexport default Home;\n",[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Diary.js",["57"],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/Edit.js",["58","59"],[],"import { useNavigate, useSearchParams } from \"react-router-dom\";\n\nconst Edit = () => {\n  const navigate = useNavigate();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const id = searchParams.get(\"id\");\n  const mode = searchParams.get(\"mode\");\n\n  return (\n    <div>\n      <h1>Edit</h1>\n      <p>이곳은 수정 페이지 입니다.</p>\n      <button onClick={() => setSearchParams({ who: \"winterlood\" })}>\n        QS바꾸기\n      </button>\n      <button\n        onClick={() => {\n          navigate(\"/home\");\n        }}\n      >\n        HOME으로 가기\n      </button>\n      <button\n        onClick={() => {\n          navigate(-1);\n        }}\n      >\n        뒤로가기\n      </button>\n    </div>\n  );\n};\n\nexport default Edit;\n","/Users/stuckyiii/projects/inflearn/emotion-diary/src/pages/New.js",[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyButton.js",["60"],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/MyHeader.js",[],[],"/Users/stuckyiii/projects/inflearn/emotion-diary/src/components/DiaryList.js",["61"],[],"import { useState } from \"react\";\n\nconst sortOptionList = [\n  { value: \"latest\", name: \"최신순\" },\n  { value: \"oldest\", name: \"오래된순\" },\n];\n\nconst ControlMenu = ({ value, onChange, optionList }) => {\n  return (\n    <select value={value} onChange={(e) => onChange(e.target.value)}>\n      {optionList.map((it, idx) => (\n        <option key={idx} value={it.value}>\n          {it.name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nconst DiaryList = ({ diaryList }) => {\n  const [sortType, setSortType] = useState(\"latest\");\n\n  const getProcessedDiaryList = () => {\n    const compare = (a, b) => {\n      if (sortType === \"latest\") {\n        return parseInt(b.date) - parseInt(a.date);\n      } else {\n        return parseInt(a.date) - parseInt(b.date);\n      }\n    };\n\n    const copyList = JSON.parse(JSON.stringify(diaryList));\n    const sortedList = copyList.sort(compare);\n    return sortedList;\n  };\n\n  return (\n    <div>\n      <ControlMenu\n        value={sortType}\n        onChange={setSortType}\n        optionList={sortOptionList}\n      />\n      {diaryList.map((it) => (\n        <div key={it.id}>{it.content}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default DiaryList;\n",{"ruleId":"62","severity":1,"message":"63","line":11,"column":8,"nodeType":"64","messageId":"65","endLine":11,"endColumn":16},{"ruleId":"62","severity":1,"message":"66","line":12,"column":8,"nodeType":"64","messageId":"65","endLine":12,"endColumn":16},{"ruleId":"62","severity":1,"message":"67","line":40,"column":9,"nodeType":"64","messageId":"65","endLine":40,"endColumn":22},{"ruleId":"62","severity":1,"message":"68","line":45,"column":9,"nodeType":"64","messageId":"65","endLine":45,"endColumn":22},{"ruleId":"62","severity":1,"message":"69","line":4,"column":11,"nodeType":"64","messageId":"65","endLine":4,"endColumn":13},{"ruleId":"62","severity":1,"message":"69","line":8,"column":9,"nodeType":"64","messageId":"65","endLine":8,"endColumn":11},{"ruleId":"62","severity":1,"message":"70","line":9,"column":9,"nodeType":"64","messageId":"65","endLine":9,"endColumn":13},{"ruleId":"62","severity":1,"message":"71","line":2,"column":9,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"62","severity":1,"message":"72","line":23,"column":9,"nodeType":"64","messageId":"65","endLine":23,"endColumn":30},"no-unused-vars","'MyButton' is defined but never used.","Identifier","unusedVar","'MyHeader' is defined but never used.","'increaseMonth' is assigned a value but never used.","'decreaseMonth' is assigned a value but never used.","'id' is assigned a value but never used.","'mode' is assigned a value but never used.","'btnType' is assigned a value but never used.","'getProcessedDiaryList' is assigned a value but never used."]